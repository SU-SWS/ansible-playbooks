---
# Ansible role for uploading the database and files to Site Factory.
# https://github.com/SU-SWS/ansible-playbooks
# ==================================================================
#
# This role uploads the database and files from local to Site Factory. It also
# runs a number of tasks to transform the database in such a way that images
# and absolute paths will work in the new ACSF environment. If any part of this
# role fails for a site, restart from the tag "upload-site".
#
# INPUTS:
#   acsf_site_name
#   inventory_hostname
#   sitefactory_environment
#   drush_environment
#   stack
#
# OUTPUTS:
# --
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# --

- name: Drop database in Site Factory and install new database
  shell: "drush @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }} {{ item }}"
  with_items:
    - "-y sql-drop"
    - "sqlc < /tmp/{{ inventory_hostname }}/dbdump.sql"
  notify: Clear site cache

- name: Set site up as a Department site
  shell: "drush @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }} {{ item }}"
  with_items:
    - "-y vset install_profile stanford_dept"
    - "cc all"
    - "sqlq 'update system set status=\"1\" where name=\"stanford_dept\"'"
    - "-y en acsf"
    - "ev 'acsf_openid_allow_local_user_logins();'"
    - "rr"
  when: dept_site == "TRUE"
  notify: Clear site cache

- name: Do post-database-restore tasks
  shell: "drush @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }} {{ item }}"
  with_items:
    - "-y updb"
    - "-y en acsf nobots stanford_ssp paranoia"
    - "ev 'acsf_openid_allow_local_user_logins();'"
    - 'ev "_paranoia_remove_risky_permissions();"'
    - "-y dis googleanalytics pingdom_rum"
    - "-y dis stanford_afs_quota"
    - "sqlq 'truncate table webauth_roles_history'"
    - "sspwmd"
  notify: Clear site cache

# Copy public files first so that they exist and Drupal can find them if needed
- name: Copy public files from local to Site Factory
  shell: "drush -y rsync /tmp/{{ inventory_hostname }}/files/ @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }}:%files/"
  notify: Clear site cache

# Copy private files first so that they exist and Drupal can find them if needed
- name: Copy private files from local to Site Factory
  shell: "drush -y rsync /tmp/{{ inventory_hostname }}/files/ @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }}:%files/"
  shell: "drush -y rsync /tmp/{{ inventory_hostname }}/files/private/ @acsf{{ drush_environment }}.{{ stack }}.{{ acsf_site_name }}:%private/"
  notify: Clear site cache
