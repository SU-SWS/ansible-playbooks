---
# Ansible role for creating a site on Site Factory
# https://github.com/SU-SWS/ansible-playbooks
# ================================================
#
# The purpose of this role is to instantiate a STATE, in this case the
# existence of a site in Site Factory.
#
# INPUTS:
#   inventory_hostname
#   sitefactory_environment
#   profile
#   group_ids
#   stack_id
#   acquia_username
#   acquia_api_key
#
# OUTPUTS:
#   existing_sites
#   site_created
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# --

- name: Check if site exists on Site Factory
  uri:
    url: "https://www.{{ sitefactory_environment }}.acsitefactory.com/api/v1/sites?limit=100"
    method: GET
    user: "{{ acquia_username }}"
    password: "{{ acquia_api_key }}"
    force_basic_auth: yes
    return_content: yes
  register: existing_sites

- name: Display all site names
  debug:
    var: item
  with_items: "{{ existing_sites | json_query('json.sites[*].site') }}"

- name: Create new site on Site Factory
  uri:
    url: "https://www.{{ sitefactory_environment }}.acsitefactory.com/api/v1/sites"
    method: POST
    user: "{{ acquia_username }}"
    password: "{{ acquia_api_key }}"
    body:
      site_name: "{{ inventory_hostname | regex_replace('[^a-z1-9]') }}"
      install_profile: "{{ profile }}"
      codebase: "{{ stack_id }}"
      group_ids: 126
    force_basic_auth: yes
    body_format: json
    return_content: yes
  register: site_created
  when: inventory_hostname not in existing_sites | json_query('json.sites[*].site')

- pause:
    minutes: 6

- name: Check drush can bootstrap site
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} status --fields='Drupal bootstrap' --field-labels=0"
  async: 3600
  poll: 0
  register: async_play

- name: Retry drush check to bootstrap site
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: async_jobs
  until: async_jobs.finished
  with_items:
    - "{{ async_play }}"
  retries: 10
  delay: 5

- debug: msg="{{ async_jobs | json_query('results[*].stdout') }}"

- name: Fail the play if result was not success
  fail: msg="Not able to grab a value for Drupal Bootstrap, which means we can't forward with this site sync."
  when: "' Successful ' not in async_jobs | json_query('results[*].stdout')"
