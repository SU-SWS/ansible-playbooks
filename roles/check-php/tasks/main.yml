# Ansible role for identifying PHP in a database.
# https://github.com/SU-SWS/ansible-playbooks
# ===============================================
#
# The purpose of this role is to run a TASK, in this case, search for evidence
# of PHP in a database.  Upon finding what might be PHP, this role should
# save the PHP to our ansible.log file for review later, and fail, continue,
# or prompt the user for what actions to take on suspicious hosts.
#
# INPUTS:
#   inventory_hostname
#   php_syntax
#   php_callbacks
#   php_candidates_consequence_prompted
#
# OUTPUTS:
#   database_php_candidates
#   php_candidates_consequence_prompted
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# - In testing, the following failed:
#   "when: php_candidates_consequence_prompted is defined"
#   This appears to fail because drupal7-update-status is for whatever reason
#   registering this variable.  But without the user_input key:value pair.
#
#   "when: php_candidates_consequence_prompted.user_input is defined"
#   Ansible appears to fail this when the variable name is not defined, in
#   this case, php_candidates_consequence_prompted.  So I can't just check
#   a key:value pair within that variable.
#
#   Before setting on this proxy, of checking for "prompt", I'd like to see if
#   Ansible might have a special filter I could use to check the key:value.

- name: Check for PHP in database
  shell: "grep -o '.\\{0,20\\}{{ item }}{% if item in php_callbacks %}{{ parens }}{% endif %}.\\{0,20\\}' /tmp/{{ inventory_hostname }}/dbdump.sql; test $? -eq 1"
  register: database_php_candidates
  ignore_errors: yes
  with_items:
    - "{{ php_syntax }}"
    - "{{ php_callbacks }}"

# I see.  Ansible appears to only be registering this variable for the first host.
- name: Prompt for action on databases with PHP
  pause:
    prompt: "Continue or fail: {{ item }}?"
  when: php_candidates_consequence == "prompt"
  register: php_candidates_consequence_prompted
  with_items: "{{ play_hosts }}"

- name: Rewrite php_candidates_consequence based on input
  set_fact:
    php_candidates_consequence: "{{ item.user_input }}"
  with_items: "{{ hostvars[play_hosts.0].php_candidates_consequence_prompted.results }}"
  when: php_candidates_consequence == "prompt" and database_php_candidates|failed
#
- name: Save PHP in file
  lineinfile:
    line: "{{ inventory_hostname }} {{ database_php_candidates | json_query('results[*].stdout_lines') }}"
    path: "/tmp/ansible-{{ inventory_hostname }}-php.log"
    create: yes
    state: present
    insertafter: EOF
  when: database_php_candidates|failed
  failed_when: php_candidates_consequence == "fail"
