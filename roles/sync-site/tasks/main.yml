---
# Ansible role for syncing the database and files between Sites and Site Factory.
# https://github.com/SU-SWS/drupal-caravan
# =====================================================================
#
# This role syncs the database from Sites to Site Factory. To do this,
# it will first save a copy locally and then rsync the local copy to
# Site Factory.
#
# INPUTS:
#   inventory_hostname
#   sitefactory_environment
#   drush_alias_environment
#   server_alias
#   site_prefix
#   stack
#   server
#   dept_site
#
# OUTPUTS:
#   factory_sites
#   files_public_path
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# --

- name: Get list of sites on Site Factory
  uri:
    url: "https://www.{{ sitefactory_environment }}.acsitefactory.com/api/v1/sites"
    method: GET
    user: "{{ acquia_username }}"
    password: "{{ acquia_api_key }}"
    force_basic_auth: yes
    body_format: json
    return_content: yes
  register: factory_sites

- name: Download copy of database from sites
  shell: "drush @{{ server_alias }}.{{ site_prefix }}_{{ inventory_hostname }} sql-dump > /tmp/{{ inventory_hostname }}/dbdump.sql"

- name: Drop database in Site Factory and install new database
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "-y sql-drop"
    - "sqlc < /tmp/{{ inventory_hostname }}/dbdump.sql"

- name: Set site up as a Department site
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "vset install_profile stanford_dept"
    - "cc all"
    - "sqlq 'update system set status=\"1\" where name=\"stanford_dept\"'"
  when: dept_site == "TRUE"

- name: Do post-database-restore tasks
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "-y updb"
    - "-y en acsf nobots stanford_ssp"
    - "-y dis googleanalytics pingdom_rum"
    - "sspwmd"

- name: Find any absolute paths and replace them - people sites
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "sar -y 'http://people.stanford.edu/{{ inventory_hostname }}/' '/'"
    - "sar -y 'https://people.stanford.edu/{{ inventory_hostname }}/' '/'"
    - "sar -y '/{{ inventory_hostname }}/' '/'"
    - "sarm -y 'http://people.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarm -y 'https://people.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarm -y '/{{ inventory_hostname }}/' ''"
    - "sarl -y 'http://people.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarl -y 'https://people.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarl -y '/{{ inventory_hostname }}/' ''"
  when:
    site_prefix == "dp"

- name: Find any absolute paths and replace them - group and dept sites
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "sar -y 'http://sites.stanford.edu/{{ inventory_hostname }}/' '/'"
    - "sar -y 'https://sites.stanford.edu/{{ inventory_hostname }}/' '/'"
    - "sar -y '/{{ inventory_hostname }}/' '/'"
    - "sarm -y 'http://sites.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarm -y 'https://sites.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarm -y '/{{ inventory_hostname }}/' ''"
    - "sarl -y 'http://sites.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarl -y 'https://sites.stanford.edu/{{ inventory_hostname }}/' ''"
    - "sarl -y '/{{ inventory_hostname }}/' ''"
  when:
    site_prefix == "ds"

- name: Find any vhost absolute paths and replace them
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} {{ item }}"
  with_items:
    - "sar -y 'http://{{ vhost }}.stanford.edu/' '/'"
    - "sar -y 'https://{{ vhost }}.stanford.edu/' '/'"
    - "sarm -y 'http://{{ vhost }}.stanford.edu/' ''"
    - "sarm -y 'https://{{ vhost }}.stanford.edu/' ''"
    - "sarl -y 'http://{{ vhost }}.stanford.edu/' ''"
    - "sarl -y 'https://{{ vhost }}.stanford.edu/' ''"
  when:
    vhost is defined

- name: Get public files directory
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} status --fields='File directory path' --field-labels=0"
  register: file_public_path

- name: Replace sites/default/files with path to files directory
  shell: "drush @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }} sar -y 'sites/default/files' '{{ file_public_path.stdout | replace(' ','') }}'"

- name: Copy files from Sites to local
  shell: "rsync -avz {{ sunetid }}@{{ server }}.stanford.edu:/afs/ir/dist/drupal/{{ site_prefix }}_{{ inventory_hostname }}/files/* /tmp/{{ inventory_hostname }}/files/."

- name: Copy files from local to Site Factory
  shell: "drush -y rsync /tmp/{{ inventory_hostname }}/files/ @{{ drush_alias_environment }}.{{ stack }}.{{ inventory_hostname }}:%files/"

- name: Add vhost as domain
  uri:
    url: "https://www.{{ sitefactory_environment }}.acsitefactory.com/api/v1/domains/{{ item }}/add"
    method: POST
    user: "{{ acquia_username }}"
    password: "{{ acquia_api_key }}"
    force_basic_auth: yes
    body_format: json
    body:
      domain_name: "{{ vhost }}.stanford.edu"
  with_items: "{{ factory_sites | json_query(\"json.sites[?site=='\" + inventory_hostname + \"'].id\") }}"
  when:
    vhost is defined

- name: Clear site cache
  uri:
    url: "https://www.{{ sitefactory_environment }}.acsitefactory.com/api/v1/sites/{{ item }}/cache-clear"
    method: POST
    user: "{{ acquia_username }}"
    password: "{{ acquia_api_key }}"
    force_basic_auth: yes
  with_items: "{{ factory_sites | json_query(\"json.sites[?site=='\" + inventory_hostname + \"'].id\") }}"
