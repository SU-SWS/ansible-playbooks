---
# Ansible role for uploading the database and files to Site Factory.
# https://github.com/SU-SWS/ansible-playbooks
# ==================================================================
#
# This role uploads the database and files from local to Site Factory. It also
# runs a number of tasks to transform the database in such a way that images
# and absolute paths will work in the new ACSF environment. If any part of this
# role fails for a site, start from the top with a fresh download of the site.
#
# INPUTS:
#   acsf_site_name
#   inventory_hostname
#   sitefactory_environment
#   drush_alias
#   drush_environment
#   stack
#
# OUTPUTS:
# --
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# --

- name: Drop database in Site Factory and install new database
  shell: "{{drush_alias }} {{ item }}"
  with_items:
    - "-y sql-drop"
    - "sqlc < /tmp/{{ inventory_hostname }}/dbdump.sql"
  notify: Clear site cache

# We sometimes have order-of-operation issues on drush updb. For instance, a
# "Column not found: 1054 Unknown column 'base.status' in 'field list'" error.
# To get past that, we can set ignore_updb_errors="TRUE" in our inventory on a
# per-site basis. That will allow us to move past errors in this task, and run
# "drush updb" a second time in the following task.
- name: Update database schema with drush updb
  shell: "{{ drush_alias }} {{ item }}"
  with_items:
    - "-y updb"
  ignore_errors: "{% if ignore_updb_errors == 'TRUE' %}yes{% endif %}"


# We must enable the profile as drush rr disables it.
- name: Reenable the install profile after Rebuild the registry disables it.
  shell: "{{ drush_alias }} {{ item }}"
  ignore_errors: yes
  with_items:
    - "-y en stanford_dept"


# BEANS, FEEDS, and probably bears too!
# The change in where the entity class exists can cause fatal errors and not
# allow the rest to continue. This drush rr is to ensure that all the PHP
# classes are registered and in the right place before we try to run updates.
- name: Run drush rr before running anything else if we're having issues
  shell: "{{ drush_alias }} {{ item }}"
  ignore_errors: yes
  with_items:
    - "-y rr"
  ignore_errors: "{% if ignore_updb_errors == 'TRUE' %}yes{% endif %}"

# This only runs "drush updb" if ignore_updb_errors == "TRUE"
- name: Run drush updb a second time for recalcitrant sites
  shell: "{{ drush_alias }} {{ item }}"
  with_items:
    - "-y updb"
  when: ignore_updb_errors == "TRUE"

# Rebuild the registry on all sites
- name: Rebuild the registry after updating the database schema
  shell: "{{ drush_alias }} {{ item }}"
  ignore_errors: yes
  with_items:
    - "-y rr"


