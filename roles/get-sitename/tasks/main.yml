---
# Ansible role for checking whether a site is in the Factory.
# https://github.com/SU-SWS/ansible-playbooks
# ===========================================================
#
# The purpose of this role is to instantiate a STATE, in this case the state
# in which acsf_site_name and sites_formatted have values.
#
# INPUTS:
#   inventory_hostname
#   acsf_environment
#   acquia_username
#   acquia_api_key
#
# OUTPUTS:
#   acsf_site_name
#   sites_formatted
#   sitefactory_environment
#   stanford_environment
#
# ALTERNATIVE ROLES:
# --
#
# REQUIREMENTS:
# --
#
# KNOWN ISSUES:
# --

- name: Sanitize inventory_hostname
  set_fact:
    acsf_site_name: "{{ inventory_hostname | lower | regex_replace('[^a-z0-9]') }}"
    cacheable: TRUE

- name: Create token for Site Factory environment URL
  set_fact:
    sitefactory_environment: "{{ acsf_environment }}-"
    cacheable: TRUE
  when:
    acsf_environment != ""

- name: Create token for stanford.edu environment URL
  set_fact:
    stanford_environment: "-{{ acsf_environment }}"
    cacheable: TRUE
  when:
    acsf_environment != ""

- name: Create token for drush environment
  set_fact:
    drush_environment: ".{{ acsf_environment }}"
    cacheable: TRUE
  when:
    acsf_environment != ""

# - name: Get list of sites on Site Factory
#   uri:
#     url: "https://www.{{ sitefactory_environment }}cardinalsites.acsitefactory.com/api/v1/sites?limit=100"
#     method: GET
#     user: "{{ acquia_username }}"
#     password: "{{ acquia_api_key }}"
#     force_basic_auth: yes
#     return_content: yes
#   register: existing_sites

- name: Get sites.json from remote
  command: drush @acsf{{ drush_environment }}.cardinald7.saml php-eval "include 'sites/sites.php'; drupal_json_output(gardens_site_data_load_file());"
  register: sites_json_raw

- name: Get sites.json from remote
  set_fact:
    sites_json: "{{ sites_json_raw.stdout|from_json }}"

# - name: debug sites.json
#   debug:
#     var: sites_json

#
# Creates a format that looks like:
# {
#     "id": 5001626,
#     "site": "crceducation",
#     "url": "crceducation-dev.cardinalsites.stanford.edu"
# },
#
- name: Manipulate sites.json
  set_fact:
    sites_formatted: "{{ sites_formatted|default([]) + [ {'url': item.0, 'id': item.1.acsf_site_id, 'site': item.0|regex_replace('((-dev|-stage).cardinalsites.stanford.edu|.(dev-|stage-)cardinalsites.acsitefactory.com)', '') } ] }}"
  with_together:
    - "{{ sites_json.sites }}"
    - "{{ sites_json|json_query('sites.*.conf') }}"

# - name: debug sites_formatted
#   debug:
#     var: sites_formatted

- name: Establish numerical id from sites_formatted JSON response
  set_fact:
    possible_site_ids: "{{ sites_formatted|json_query(existing_sites_query) }}"
  vars:
    existing_sites_query: "[?site=='{{ acsf_site_name }}'].id"

- name: Set site_id if site id exists
  set_fact:
    site_id: possible_site_ids|first
  when: possible_site_ids|length > 0

# - name: Debug site_id
#   debug:
#     var: site_id
#
# - name: Acsf site name
#   debug:
#     var: acsf_site_name
